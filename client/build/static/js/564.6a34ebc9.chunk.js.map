{"version":3,"file":"static/js/564.6a34ebc9.chunk.js","mappings":"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","sources":["components/Footer.jsx","pages/Appointments.jsx"],"sourcesContent":["import React from \"react\";\nimport \"../styles/footer.css\";\nimport { FaFacebookF, FaYoutube, FaInstagram } from \"react-icons/fa\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <>\n      <footer>\n        <div className=\"footer\">\n          <div className=\"footer-links\">\n            <h3>Links</h3>\n            <ul>\n              <li>\n                <NavLink to={\"/\"}>Home</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/doctors\"}>Doctors</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/appointments\"}>Appointments</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/notifications\"}>Notifications</NavLink>\n              </li>\n              <li>\n                <HashLink to={\"/#contact\"}>Contact Us</HashLink>\n              </li>\n              <li>\n                <NavLink to={\"/profile\"}>Profile</NavLink>\n              </li>\n            </ul>\n          </div>\n          <div className=\"social\">\n            <h3>Social links</h3>\n            <ul>\n              <li className=\"facebook\">\n                <a\n                  href=\"https://www.facebook.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaFacebookF />\n                </a>\n              </li>\n              <li className=\"youtube\">\n                <a\n                  href=\"https://www.youtube.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaYoutube />\n                </a>\n              </li>\n              <li className=\"instagram\">\n                <a\n                  href=\"https://www.instagram.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaInstagram />\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"footer-bottom\">\n          Copy Right\n          Â© {new Date().getFullYear()}\n        </div>\n      </footer>\n    </>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Empty from \"../components/Empty\";\nimport Footer from \"../components/Footer\";\nimport Navbar from \"../components/Navbar\";\nimport fetchData from \"../helper/apiCall\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport Loading from \"../components/Loading\";\nimport { toast } from \"react-hot-toast\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nimport \"../styles/user.css\";\n\nconst Appointments = () => {\n  const [appointments, setAppointments] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const PerPage = 5;\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n  const { userId } = jwt_decode(localStorage.getItem(\"token\"));\n\n  const getAllAppoint = async () => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(\n        `/appointment/getallappointments?search=${userId}`\n      );\n      setAppointments(temp);\n      dispatch(setLoading(false));\n    } catch (error) {\n      console.error(\"Error fetching appointments:\", error);\n      toast.error(\"Failed to fetch appointments. Please try again.\");\n    }\n  };\n\n  useEffect(() => {\n    getAllAppoint();\n  }, []);\n\n  const totalPages = Math.ceil(appointments.length / PerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const renderPagination = () => {\n    const pages = [];\n    for (let i = 1; i <= totalPages; i++) {\n      pages.push(\n        <button key={i} onClick={() => handlePageChange(i)}>\n          {i}\n        </button>\n      );\n    }\n    return pages;\n  };\n\n  const paginatedAppointments = appointments.slice(\n    (currentPage - 1) * PerPage,\n    currentPage * PerPage\n  );\n\n  const completeAppointment = async (appointment) => {\n    try {\n      await axios.put(\n        \"/appointment/completed\",\n        {\n          appointid: appointment._id,\n          doctorId: appointment.doctorId._id,\n          doctorname: `${appointment.userId.firstname} ${appointment.userId.lastname}`,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      );\n      toast.success(\"Appointment completed successfully.\");\n      getAllAppoint();\n    } catch (error) {\n      console.error(\"Error completing appointment:\", error);\n      toast.error(\"Failed to complete appointment. Please try again.\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar />\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"container notif-section\">\n          <h2 className=\"page-heading\">Your Appointments</h2>\n\n          {appointments.length > 0 ? (\n            <div className=\"appointments\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S.No</th>\n                    <th>Doctor</th>\n                    <th>P Name</th>\n                    <th>P Age</th>\n                    <th>P Gender</th>\n                    <th>P Mobile No.</th>\n                    <th>P bloodGroup</th>\n                    <th>P Family Diseases</th>\n                    <th>Appointment Date</th>\n                    <th>Status</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {paginatedAppointments.map((appointment, index) => (\n                    <tr key={appointment._id}>\n                      <td>{(currentPage - 1) * PerPage + index + 1}</td>\n                      <td>{`${appointment.doctorId.firstname} ${appointment.doctorId.lastname}`}</td>\n                      <td>{`${appointment.userId.firstname} ${appointment.userId.lastname}`}</td>\n                      <td>{appointment.age}</td> \n                      <td>{appointment.gender}</td>\n                      <td>{appointment.number}</td>\n                      <td>{appointment.bloodGroup}</td>\n                      <td>{appointment.familyDiseases}</td>\n                      <td>{appointment.date}</td>\n                      <td>{appointment.status}</td>\n                      <td>\n                        <button\n                          className=\"btn user-btn complete-btn\"\n                          onClick={() => completeAppointment(appointment)}\n                          disabled={appointment.status === \"Completed\"}\n                        >\n                          Complete\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div className=\"pagination\">{renderPagination()}</div>\n            </div>\n          ) : (\n            <Empty message=\"No appointments found.\" />\n          )}\n        </section>\n      )}\n      <Footer />\n    </>\n  );\n};\n\nexport default Appointments;\n"],"names":["className","to","href","target","rel","Date","getFullYear","useState","appointments","setAppointments","currentPage","setCurrentPage","dispatch","useDispatch","loading","useSelector","state","root","userId","jwt_decode","localStorage","getItem","getAllAppoint","setLoading","fetchData","temp","console","error","toast","useEffect","totalPages","Math","ceil","length","paginatedAppointments","slice","completeAppointment","appointment","axios","appointid","_id","doctorId","doctorname","firstname","lastname","headers","Authorization","map","index","age","gender","number","bloodGroup","familyDiseases","date","status","onClick","disabled","pages","push","i","renderPagination","message"],"sourceRoot":""}